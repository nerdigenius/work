{"ast":null,"code":"var _jsxFileName = \"D:\\\\discrete_jobs_prototype\\\\discrete_jobs_prototype\\\\src\\\\timer.js\";\n\nconst React = require('react');\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 0,\n      start: 0,\n      isOn: false,\n      apiData: ''\n    };\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n  }\n\n  startTimer() {\n    if (this.state.isOn === false) {\n      this.setState({\n        time: this.state.time,\n        start: Date.now() - this.state.time,\n        isOn: true\n      });\n      this.props.updateTimerStart(true);\n      const url = \"http://localhost:5000/\";\n      fetch(url).then(response => response.json()).then(data => this.setState({\n        A: ''\n      })).catch(e => console.log('error', e));\n      this.timer = setInterval(() => this.setState({\n        time: Date.now() - this.state.start\n      }), 1000);\n      console.log(Date.now());\n    }\n  }\n\n  stopTimer() {\n    this.setState({\n      isOn: false\n    });\n    this.props.timeElapsed(Math.round(this.state.time / 1000));\n    this.props.updateViewList(\"show\");\n    clearInterval(this.timer);\n    console.log(\"stop\");\n  }\n\n  resetTimer() {\n    if (this.state.isOn === false) {\n      this.setState({\n        time: 0\n      });\n      this.props.updateViewList(\"hide\");\n      console.log(\"reset\");\n      this.props.updateTimerStart(false);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"timer: \", Math.round(this.state.time / 1000), \" \"), React.createElement(\"button\", {\n      onClick: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"start\"), React.createElement(\"button\", {\n      onClick: this.stopTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"stop\"), React.createElement(\"button\", {\n      onClick: this.resetTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"reset\"));\n  }\n\n}\n\nmodule.exports = Timer;","map":{"version":3,"sources":["D:\\discrete_jobs_prototype\\discrete_jobs_prototype\\src\\timer.js"],"names":["React","require","Timer","Component","constructor","props","state","time","start","isOn","apiData","startTimer","bind","stopTimer","resetTimer","setState","Date","now","updateTimerStart","url","fetch","then","response","json","data","A","catch","e","console","log","timer","setInterval","timeElapsed","Math","round","updateViewList","clearInterval","render","module","exports"],"mappings":"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","sourcesContent":["const React = require('react')\r\nclass Timer extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            time: 0,\r\n            start: 0,\r\n            isOn: false,\r\n            apiData:''\r\n          }\r\n        this.startTimer = this.startTimer.bind(this)\r\n        this.stopTimer = this.stopTimer.bind(this)\r\n        this.resetTimer = this.resetTimer.bind(this)\r\n      }\r\n    \r\n    startTimer() {\r\n\r\n      if(this.state.isOn===false)\r\n      {\r\n        this.setState({\r\n          time: this.state.time,\r\n          start: Date.now() -this.state.time,\r\n          isOn: true,\r\n        })\r\n\r\n        this.props.updateTimerStart(true);\r\n\r\n        const url = `http://localhost:5000/`;\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({ A:'' }))\r\n        .catch(e => console.log('error', e));\r\n  \r\n  \r\n        this.timer = setInterval(() => this.setState({\r\n          time: Date.now() - this.state.start\r\n        }), 1000)\r\n        \r\n          console.log(Date.now())\r\n\r\n      }\r\n\r\n      \r\n      }\r\n      stopTimer() {\r\n        this.setState({isOn: false})\r\n        this.props.timeElapsed(Math.round((this.state.time)/1000))\r\n        this.props.updateViewList(\"show\")        \r\n        clearInterval(this.timer)\r\n        console.log(\"stop\")\r\n      }\r\n      resetTimer() {\r\n        if(this.state.isOn===false)\r\n        {\r\n\r\n          this.setState({time: 0})\r\n          this.props.updateViewList(\"hide\")          \r\n          console.log(\"reset\")\r\n          this.props.updateTimerStart(false);\r\n\r\n        }\r\n        \r\n      }\r\n      \r\n\r\n  render() {\r\n\r\n    \r\n     return (\r\n       <div>\r\n         \r\n        <h3>timer: {Math.round((this.state.time)/1000)} </h3>\r\n        <button onClick={this.startTimer}>start</button>\r\n        <button onClick={this.stopTimer}>stop</button>\r\n        <button onClick={this.resetTimer}>reset</button>\r\n       </div>\r\n     );\r\n  }\r\n}\r\nmodule.exports = Timer"]},"metadata":{},"sourceType":"module"}