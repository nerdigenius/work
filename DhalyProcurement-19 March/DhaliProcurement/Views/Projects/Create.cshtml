@model DhaliProcurement.ViewModel.VMProjectSite
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var optionsStaff = new AjaxOptions
    {
        HttpMethod = "POST",
        OnSuccess = "OnSuccessStaff",
        OnComplete = "OnCompleteStaff",
        OnFailure = "OnFailureStaff"
    };

}

    <div class="row">
        <div class="col-md-12">
            <!-- Basic layout-->
            <div class="panel panel-flat">
                <div class="panel-heading">
                    <h5 class="panel-title"><i class="icon-stack-plus position-left"></i>Create Project</h5><hr />
                    <div class="heading-elements">
                        <ul class="icons-list">
                            <li><a data-action="collapse"></a></li>
                        </ul>
                    </div>
                </div>
                <div class="panel-body">

                    @using (Html.BeginForm())
                    {
                        <table class="table">
                            <tr @*style="border:1px solid red;"*@>
                                <td class="col-lg-2">Project Name</td>
                                <td class="col-lg-10" colspan="2">
                                    @Html.TextBox("ProjectName", "", new { @class = "form-control", @tabindex = "1" })
                                    <span class="error" id="ProjectName_Error"></span>
                                </td>
                            </tr>
                            <tr>
                                <td class="col-lg-">Project Manager</td>
                                <td class="col-lg-10">
                                    @Html.DropDownList("RName", null, "--Select--", htmlAttributes: new { @id = "RName", @class = "form-control select2", @style = "width: 500px !important", @tabindex = "2" })
                                    @Html.ValidationMessage("RName", "", new { @class = "text-danger" })

                                </td>
                                <td class="col-lg-1">
                                    <button type="button" id="addProjectManager" class="btn btn-primary" data-toggle="modal" data-target="#resourceProjectManagerModal" style="background-color: grey;border: none;">Add</button>
                                </td>
                            </tr>

                            <tr>
                                <td>Project Start Date</td>
                                <td colspan="2">
                                    @Html.TextBox("StartDate", null, new { @class = "form-control datepicker", @tabindex = "3" })
                                </td>
                            </tr>
                            <tr>
                                <td>Project End Date</td>
                                <td colspan="2">
                                    @Html.TextBox("EndDate", null, new { @class = "form-control datepicker", @tabindex = "4" })
                                </td>
                            </tr>
                            <tr>
                                <td>Remarks</td>
                                <td colspan="2">
                                    @Html.TextBox("Remarks", null, new { @class = "form-control", @tabindex = "5" })
                                    <span class="error" id="Remarks_Error">Site name required</span>
                                </td>
                            </tr>
                        </table>
                        <hr />

                    }

                    <div class="jumbotron" style="padding:10px;">
                        <table style="width: 100%;">
                            <tr>
                                <td style="font-weight: bold;" class="col-lg-4">Site Name</td>
                                <td style="font-weight: bold;" class="col-lg-4">Location</td>
                                <td style="font-weight: bold;" class="col-lg-3">Site Engineer</td>
                                <td>&nbsp;</td>
                            </tr>

                            <tr>
                                <td>
                                    <input type="text" id="SiteName" class="form-control" tabindex="6" />
                                </td>
                                <td>
                                    <input type="text" id="SiteLocation" class="form-control" tabindex="7" />
                                </td>
                                <td>
                                    @Html.DropDownList("RName", null, "--Select--", htmlAttributes: new { @class = "form-control select2", @data_required = "required", @id = "SiteRName", @tabindex = "8" })
                                </td>
                                <td>
                                    <button type="button" id="addNewRow" class="btn btn-info" style="background-color: grey;border: none;"><i class="glyphicon glyphicon-plus"></i></button>
                                    @*<input type="button" id="addNewRow" value="ADD" class="btn btn-primary" style="background-color: grey;border: none;" tabindex="9" />*@
                                    
                                    @*<input type="button" id="addNewRow" value="ADD" class="btn btn-info btn-xs"/>*@
                                </td>
                            </tr>
                            <tr>
                                <td><span class="error" id="SiteName_Error">Site name required</span><span class="error" id="SiteNameMax_Error">Site name required</span></td>
                                <td><span class="error" id="SiteLocation_Error">Location required</span><span class="error" id="LocationValidation_Error"></span></td>
                                <td><span class="error" id="SiteEngineer_Error">Site Engineer required</span></td>
                            </tr>
                        </table>
                        <br />
                        <table class="Resource-list table table-bordered" id="Item-list">
                            <thead>
                                @*<tr class="bg-slate-700">*@
                                <tr class="bg-grey">
                                    @*<th>SL No.</th>*@
                                    <th class="col-lg-4">Site Name</th>
                                    <th class="col-lg-4">Location</th>
                                    <th class="col-lg-2">Site Engineer</th>
                                    <th class="col-lg-2"></th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12" style="text-align:center;">
                    <button type="button" id="SaveProject" class="btn btn-primary" ><i class="icon-add position-left"></i> Create</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal for Add staff -->
    <div class="modal fade" id="resourceProjectManagerModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staffModalTitle">Add Staff</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="panel-body">
                        @using (Ajax.BeginForm("ResourceCreate", "CompanyResources", null, optionsStaff, new { @id = "staffCreateForm" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                <div class="form-group">
                                    <input type="hidden" id="ProjectId" value="" />
                                </div>
                                <div class="form-group">
                                    @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="col-md-10">
                                        @Html.TextBox("Name", null, new { @class = "form-control", @id = "NameStaff" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("Position", htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="col-md-10">
                                        @Html.TextBox("Position", null, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("ToDOJ", "DOJ", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.TextBox("DOJ", null, new { @class = "form-control datepicker" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("ToDOB", "DOB", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.TextBox("DOB", null, new { @class = "form-control datepicker" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("Phone", htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="col-md-10">
                                        @Html.TextBox("Phone", null, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("Email", htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="col-md-10">
                                        @Html.TextBox("Email", null, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("Address", htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="col-md-10">
                                        @Html.TextBox("Address", null, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("Status", htmlAttributes: new { @class = "control-label col-md-2", @required = "required" })
                                    <div class="col-md-10">
                                        <select class="form-control" id="Status" name="Status">
                                            <option value="A">Active</option>
                                            <option value="I">Inactive</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <div class="col-md-offset-2 col-md-10">
                                        <button type="submit" class="btn btn-primary" id="ModalSave">Save</button>
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

<!--Modal for editing an item-->
    <div class="modal fade" id="detailForm" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staffModalTitle">Edit Site</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="panel-body">
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            <div class="form-group">
                                <input type="hidden" id="ProjectId" value="" />
                            </div>
                            <div class="form-group">
                                <input type="hidden" id="ModalTaskId" />
                                @Html.Label("Site", htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="col-md-10">
                                    @Html.TextBox("ModalSite", null, new { @class = "form-control", @id = "ModalSite" })
                                    <span class="error" id="ModalSiteName_Error"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Location", htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="col-md-10">
                                    @Html.TextBox("ModalLocation", null, new { @class = "form-control" })
                                    <span class="error" id="ModalLocation_Error"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Site Engineer", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input type="hidden" id="modalSiteEng" />
                                    @Html.DropDownList("RName", null, "--Select--", htmlAttributes: new { @id = "ModalSiteEngineer", @class = "form-control select2", @style = "width: 500px !important" })
                                    <span class="error" id="ModalSiteEngineer_Error"></span>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <div class="col-md-offset-2 col-md-10">
                                    <button type="submit" class="btn btn-primary" id="ModalDetailSave">Save</button>
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal" id="ModalClose">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        $(document).ready(function () {

            //Form validation
            $('#ProjectName_Error').hide();
            $('#Remarks_Error').hide();
            $('#SiteName_Error').hide();
            $('#SiteLocation_Error').hide();
            $('#SiteEngineer_Error').hide();
            $('#LocationValidation_Error').hide();
            $('#SiteNameMax_Error').hide();
            

            //Modal Edit Validation
            $('#ModalSiteName_Error').hide();
            $('#ModalLocation_Error').hide();
            $('#ModalSiteEngineer_Error').hide();
           
            var counter = 0; //counter for the serial

        });

        //new on 10 Jan 18
        //Project Manager Modal
        $('#ModalSave').click(function () {
            $('#resourceProjectManagerModal').modal('hide');
        });

        var selRow; //global variable for edit item

        //====================Add new rowto the Table==================
        //=============================================================
        $('#addNewRow').click(function (event) {
            event.preventDefault();

            var SiteName = $('#SiteName').val();
            var SiteLocation = $('#SiteLocation').val();
            var SiteEngineer = $('#SiteRName option:selected').text();
            var SiteEngineerId = $('#SiteRName option:selected').val();

            var isValidSite = true;

            if (SiteName.trim() == '') {
                isValidSite = false;
                $('#SiteName_Error').text("Site Name required").show();
            }
            else {
                $('#SiteName_Error').hide();
            }
            if ($('#SiteName').val().trim().length > 255) {

                $('#SiteNameMax_Error').text("Site Name can not be greater than 256 characters!").show();
                isValidSite = false;
            }
            else {
                $('#SiteNameMax_Error').hide();
            }

            if ($('#SiteLocation').val().trim() == '') {

                isValidSite = false;
                $('#SiteLocation_Error').show();
            }
            else {
                $('#SiteLocation_Error').hide();
            }
            if ($('#SiteLocation').val().trim().length > 255) {

                isValidSite = false;
                $('#LocationValidation_Error').text("Site Location cannot be greater than 256 characters!").show();
            }
            else {
                $('#LocationValidation_Error').hide();
            }
            if (SiteEngineer == '' || SiteEngineer == "--Select--") {

                isValidSite = false;
                $('#SiteEngineer_Error').show();
            }
            else {
                $('#SiteEngineer_Error').hide();
            }

            $('table.Resource-list tbody tr').each(function () {
                var name = $(this).find("td input[name=SiteName]").val();
                if (SiteName.trim().toUpperCase() == name.trim().toUpperCase()) {
                    alert('This Site already exists!');
                    isValidSite = false;
                }

            });

            //Add site to list if valid
            if (isValidSite) {
                counter++;
                var newRow = jQuery('<tr>'
                    //+ '<td><label>' + counter + '</label><input type="hidden" name="TaskId" value="' + counter + '"/></td>'
                    + '<td><input type="hidden" name="TaskId" value="' + counter + '"/><input class="form-control" value="' + SiteName + '" type="hidden" name="SiteName"/><label name="label_SiteName">' + SiteName + '</label></td>'
                    + '<td><input class="form-control" value="' + SiteLocation + '" type="hidden" name="SiteLocation"/><label name="label_SiteLocation">' + SiteLocation + '</label></td>'
                    + '<td><input value="' + SiteEngineerId + '" type="hidden" name="SiteEngineerId"/><input class="form-control" value="' + SiteEngineer + '"  type="hidden" name="SiteEngineer" disabled="disabled"/><label name="label_SiteEngineer">' + SiteEngineer + '</label></td>'
                    + '<td>'
                    + '<button type="button" id="editSite" class="btn text-primary-400 btn-flat btn-icon btn-rounded  btn-xs editSite " data-toggle="modal" data-target="#detailForm"><i class="icon-pencil"></i></button>'
                    + '<button class="btn  text-warning-600 btn-flat btn-icon btn-rounded btn-xs"  onclick="$(this).parent().parent().remove();"><i class="icon-cross"></i></button>'
                    + '</td></tr>');

                jQuery('table.Resource-list tbody').append(newRow);

                RebindSiteEngineer();

                //$('#SiteRName').val("");
                $('#SiteName').val("");
                $('#SiteLocation').val("");
            }

            $('.editSite').click(function () {
                var row = $(this).closest('tr');
                selRow = $(this).closest('tr');
                var TaskId = row.find('input[name=TaskId]').val();
                var SiteName = row.find('input[name=SiteName]').val();
                var Location = row.find('input[name=SiteLocation]').val();
                var SiteEngineer = row.find('input[name=SiteEngineer]').val();
                var SiteEngineerId = row.find('input[name=SiteEngineerId]').val();
                //alert(TaskId);

                $('#ModalTaskId').val(TaskId);
                $('#ModalSite').val(SiteName);
                $('#ModalLocation').val(Location);
                $('#modalSiteEng').val(SiteEngineerId);

                $('#ModalSiteEngineer').val(SiteEngineerId).change();
            });


        });



        //Modal Save
        $('#ModalDetailSave').click(function () {


            var isValidSite = true;
            var TaskId = $('#ModalTaskId').val();
            var SiteName = $('#ModalSite').val();
            var Location = $('#ModalLocation').val();
            var SiteEngineer = $('#ModalSiteEngineer option:selected').val();
            var SiteEngineerName = $('#ModalSiteEngineer option:selected').text();

            //validation for Modal fields
            if (SiteName == "") {
                $('#ModalSiteName_Error').text("Site required").show();
                isValidSite = false;
            }
            else {
                if (SiteName.trim().length > 256) {
                    $('#ModalSiteName_Error').text("Site Name can not be greater than 256 characters!").show();
                    isValidSite = false;
                }
                else {
                    $('#ModalSiteName_Error').hide();
                }
            }

            if (Location.trim() == "") {
                $('#ModalLocation_Error').text("Location required").show();
                isValidSite = false;
            }
            else {
                if (Location.trim().length > 256) {
                    $('#ModalLocation_Error').text("Location can not be greater than 256 characters!").show();
                    isValidSite = false;
                }
                else {
                    $('#ModalLocation_Error').hide();
                }
            }
            if (SiteEngineerName.trim() === '' || SiteEngineerName.trim() === "--Select--") {
                isValidSite = false;
                $('#ModalSiteEngineer_Error').text("Site Engineer required").show();
            }
            else {
                $('#ModalSiteEngineer_Error').hide();
            }
                
           
            //validation for checking duplicate item
            $('table.Resource-list tbody tr').each(function () {
                var name = $(this).find("td input[name=SiteName]").val();
                var task = $(this).find("td input[name=TaskId]").val();

                //checks if the item exists in the table
                if (task != TaskId.trim()) {

                    if (SiteName.toUpperCase() == name.toUpperCase()) {
                        alert('This Site already exists!');
                        isValidSite = false;
                    }
                }
            });

            //if all inputs are valid than i will be aded to the table
            if (isValidSite) {
                selRow.find('input[name=SiteName]').val(SiteName);
                selRow.find('input[name=SiteLocation]').val(Location);
                selRow.find('input[name=SiteEngineer]').val(SiteEngineerName);
                selRow.find('input[name=SiteEngineerId]').val(SiteEngineer);

                selRow.find('label[name=label_SiteName]').text(SiteName);
                selRow.find('label[name=label_SiteLocation]').text(Location);
                selRow.find('label[name=label_SiteEngineer]').text(SiteEngineerName);

                $('#detailForm').modal('hide'); //hides the moidal
            }

        });

        $('#ModalClose').click(function () {
            $('#ModalSiteName_Error').hide();
            $('#ModalLocation_Error').hide();
            $('#ModalSiteEngineer_Error').hide();
        });


        //Modal save ends
    </script>

    <script>

        var counter = 0;
        var cnTaskRow = 0;

        //Adding Company Resources
        function OnBeginStaff() { }
        function OnCompleteStaff() { }
        function OnSuccessStaff() {
            $('#NameStaff').val("");
            $('#Position').val("");
            $('#ToDOJ').val("");
            $('#ToDOB').val("");
            $('#Phone').val("");
            $('#Mobile').val("");
            $('#Email').val("");
            $('#Address').val("");
            //$('#Status').val("");
            $('#resourceStaffModal').modal('hide');
            $.get("@Url.Action("GetStaff", "CompanyResources")", function (resp) {
                if (resp.Flag) {
                    //$("#RName").empty().html("<option value>--Select--</option>");
                    //$("#RName").html("<option value>--Select--</option>");
                    $("#SiteRName").empty().html("<option value>--Select--</option>");
                    $.each(resp.CompanyResources, function (key, item) {
                        $("<option>").attr("value", item.Value).html(item.Text).appendTo($("#RName"));
                        $("<option>").attr("value", item.Value).html(item.Text).appendTo($("#SiteRName"));
                    });
                }
            });
        }

        function OnFailureStaff() { }



        $('#SaveProject').click(function () {
            if ($.trim($('#ProjectName').val()) == "") {
                alert('Project name required');
                //$('#ProjectName_Error').text("Project name required!")
                //$('#ProjectName_Error').show();
                $('#ProjectName').focus();
            }
            else if ($.trim($('#RName').val()) == "" | $.trim($('#RName').val()) == "--Select--") {
                alert('Project Manager required');
                $('#RName').focus();
            }

           ////code for end date validation
           // else if ($('#StartDate').val() != null && $('#EndDate').val() != null) {
           //     if ($('#StartDate').val() > $('#EndDate').val()) {
           //         alert('Start Date cannot be less than end date!');
           //     }
           // }
            else {
                $('#ProjectName_Error').hide();
                CreateProject();
            }
        });


        function CreateProject() {

            var isValid = true;
            var ProjectName = $('#ProjectName').val();
            if (ProjectName.trim().length > 256) {
                isValid = false;
                $('#ProjectName_Error').text("Project name cannot be greater than 256 characters!")
                $('#ProjectName_Error').show();
            }
            else {
                $('#ProjectName_Error').hide();
            }
            //var ClientId = document.getElementById("ClientId");
            //alert('ProjectName '+ ProjectName);

            var StartDate = $('#StartDate').val();
            //var sDate = StartDate.toString("DD/MM/YYYY");
            //alert(sDate + 'new date');
            //alert(StartDate);
            var EndDate = $('#EndDate').val();
            //alert(EndDate);
            var Remarks = $('#Remarks').val();
            if (Remarks.trim().length > 200) {
                isValid = false;
                $('#Remarks_Error').text("Remarks cannot be greater than 200 characters!").show();
            }
            else {
                $('#Remarks_Error').hide();
            }


            //alert('remarks '+Remarks);
            var RName = $('#RName').val();
            //var SiteId = document.getElementsByName("SiteId");
            //for (var i = 0; i < SiteId.length; i++) {
            //    alert('SiteId ' + SiteId[i].value);
            //}
            var SiteName = document.getElementsByName("SiteName");

            var SiteLocation = document.getElementsByName("SiteLocation");
            var SiteEngineerId = document.getElementsByName("SiteEngineerId");
            var Length = $('.Resource-list tr').length;


            if ($('.Resource-list tr').length < 2) {
                alert('Please add site to this Project');
                isValid = false;
            }

            // alert('L '+Length);
            //alert('length '+Length);

            if (isValid) {
                var SiteDetails = [];

                // alert('test');
                for (var i = 0; i < Length - 1; i++) {

                    SiteDetails.push({ SiteName: SiteName[i].value, SiteLocation: SiteLocation[i].value, SiteEngineerId: SiteEngineerId[i].value });
                    console.log('<----->');
                    console.log('SiteName:' + SiteDetails[i].SiteName);
                    console.log('SiteLocation:' + SiteDetails[i].SiteLocation);
                    console.log('SiteEngineerId:' + SiteDetails[i].SiteEngineerId);

                }
                // debugger;

                SiteResourceDetails = JSON.stringify({
                    SiteResourceDetails: SiteDetails,
                    ProjectName: ProjectName,
                    StartDate: StartDate,
                    EndDate: EndDate,
                    Remarks: Remarks,
                    RName: RName
                });


                //   debugger;
                $.ajax({
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    type: 'POST',
                    url: '/Projects/ProjectCreate',
                    traditional: true,
                    data: SiteResourceDetails,
                    success: function (result) {
                        //alert('Successful');
                        if (result.flag) {
                            alert("Record created successfully!");
                            window.location = "/Projects/Index";
                        }
                        else {
                            alert(result.message);
                        }
                    },
                    failure: function (response) {
                        alert('Error');
                    }
                });
            }


        };

        function RebindSiteEngineer() {
           $.ajax({
                type: "post",
                url: "/CompanyResources/GetStaff",
                datatype: "json",
                traditional: true,
                success: function (data) {

                    $('#SiteRName').empty();
                    var listOfitems = data.CompanyResources.length;
                    var items = "<select id='SiteRName'>";
                    items = items + '<option value="">--Select--</option>';
                    for (var i = 0; i < listOfitems; i++) {
                        items = items + '<option value=' + data.CompanyResources[i].Value + '>' + data.CompanyResources[i].Text + '</option>';
                    }
                    items = items + '</select>';
                    $('#SiteRName').html(items);

                }

            });
        }


    </script>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script src="~/Plugins/select2/select2.min.js"></script>

        <script>
            $(".select2").select2();
        </script>
    }
    <style>
        span.error {
            display: block;
            /*visibility: hidden;*/  
            font-style:italic;         
            color: #c12a2a;
            font-size: 90%;
        }
    </style>
