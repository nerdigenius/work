@model DhaliProcurement.ViewModel.VMProjectSite
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var optionsStaff = new AjaxOptions
    {
        HttpMethod = "POST",
        OnSuccess = "OnSuccessStaff",
        OnComplete = "OnCompleteStaff",
        OnFailure = "OnFailureStaff"
    };

}

<div class="row">
    <div class="col-md-12">
        <!-- Basic layout-->
        <div class="panel panel-flat">
            <div class="panel-heading">
                <h5 class="panel-title"><i class="icon-stack-plus position-left"></i>Edit Project</h5><hr />
                <div class="heading-elements">
                    <ul class="icons-list">
                        <li><a data-action="collapse"></a></li>
                    </ul>
                </div>
            </div>
            <div class="panel-body">
                @using (Html.BeginForm())
                {

                    <table class="table">
                        <tr>
                            <td class="col-lg-2">Project Name</td>
                            <td  class="col-lg-10" colspan="2">
                                <input type="text" value="@ViewBag.ProjectName" id="ProjectName" class="form-control"/>


                            </td>
                        </tr>

                        <tr>
                            <td class="col-lg-">Project Manager</td>
                            <td class="col-lg-10">
                                @Html.DropDownList("ProjectManager", null, "--Select--", htmlAttributes: new { @class = "form-control select2", @data_required = "required" })
                                @*<button type="button" id="addProjectManager" class="btn btn-primary" data-toggle="modal" data-target="#resourceProjectManagerModal">Add</button>*@
                            </td>
                            <td class="col-lg-1">
                                <button type="button" id="addProjectManager" class="btn btn-primary" data-toggle="modal" data-target="#resourceProjectManagerModal" style ="background-color: grey;border: none;">Add</button>
                            </td>
                        </tr>


                        <tr>
                            <td>Project Start Date</td>
                            <td  colspan="2">
                                <input type="text" value="@ViewBag.StartDate" id="StartDate" class="form-control datepicker" />
                            </td>
                        </tr>

                        <tr>
                            <td>Project End Date</td>
                            <td  colspan="2">
                                <input type="text" value="@ViewBag.EndDate" id="EndDate" class="form-control datepicker" />
                            </td>
                        </tr>
                        @*<tr>


                            <td>Client</td>
                            <td>
                                @Html.DropDownList("ClientId", null, "--Select--", htmlAttributes: new { @class = "form-control select2", @required = "required" })
                                @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })

                               <button type="button" id="addClient" class="btn btn-primary" data-toggle="modal" data-target="#resourceClientModal">Add</button>

                            </td>

                                 </tr>*@

                        <tr>
                            <td>Remarks</td>
                            <td colspan="2">
                                <input type="text" value="@ViewBag.ProjectRemarks" id="ProjectRemarks" class="form-control" />

                            </td>
                        </tr>


                    </table>
                    <hr />


                    @*<div class="form-group">
                            <div class="col-md-offset-5 col-md-10">
                                <button type="button" id="SaveProject" class="btn btn-primary"><i class="icon-add position-left"></i> Save</button>
                            </div>
                        </div>*@


                }


                <div class="details well" style=" border 1px solid black;">
                    <table style="width: 100%;">
                        <tr>
                            <td style="font-size: 15px; font-weight: bold;">Site Name</td>
                            <td style="font-size: 15px; font-weight: bold;">Location</td>
                            <td style="font-size: 15px; font-weight: bold;">Site Engineer</td>
                            <td>&nbsp;</td>
                        </tr>

                        <tr>
                            <td>
                                <input type="text" id="SiteName" class="form-control" />
                            </td>

                            <td>
                                <input type="text" id="SiteLocation" class="form-control" />
                            </td>

                            <td>
                                @Html.DropDownList("RName", null, "--Select--", htmlAttributes: new { @class = "form-control select2", @data_required = "required", @id = "SiteRName" })
                            </td>

                            <td>
                                <input type="button" id="addNewRow" value="+" class="btn btn-primary" style ="background-color: grey;border: none;"/>
                            </td>
                        </tr>

                        <tr>
                            <td><span class="error" id="SiteName_Error">Item name required</span></td>
                            <td><span class="error" id="SiteLocation_Error">Quantity required</span></td>
                            <td><span class="error" id="SiteEngineer_Error">Unit required</span></td>
                        </tr>
                    </table>
                    <br />
                    <table class="Resource-list table table-bordered" id="Item-list">
                        <thead>
                            <tr class="bg-grey">
                                <th>Site Name</th>
                                <th>Location</th>
                                <th>Site Engineer</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody></tbody>

                    </table>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12" style="text-align:center;">
                @*<button type="button" id="UpdateProject" class="btn btn-primary" style ="background-color: grey;border: none;"><i class="icon-add position-left"></i>Update</button>*@
                <button type="button" id="UpdateProject" class="btn btn-success"><i class="icon-floppy-disk position-left"></i>Update</button>
            </div>
        </div>

    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="resourceProjectManagerModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staffModalTitle">Add Staff</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="panel-body">
                    @using (Ajax.BeginForm("ResourceCreate", "CompanyResources", null, optionsStaff, new { @id = "staffCreateForm" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">

                            <div class="form-group">
                                <input type="hidden" id="ProjectId" value="" />
                            </div>

                            <div class="form-group">
                                <input type="hidden" id="ModalTaskId" />
                                @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="col-md-10">
                                    @Html.TextBox("Name", null, new { @class = "form-control", @id = "NameStaff" })

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Position", htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="col-md-10">
                                    @Html.TextBox("Position", null, new { @class = "form-control" })

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("ToDOJ", "DOJ", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.TextBox("DOJ", null, new { @class = "form-control datepicker" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("ToDOB", "DOB", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.TextBox("DOB", null, new { @class = "form-control datepicker" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Phone", htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="col-md-10">
                                    @Html.TextBox("Phone", null, new { @class = "form-control" })

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Email", htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="col-md-10">
                                    @Html.TextBox("Email", null, new { @class = "form-control" })

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Address", htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="col-md-10">
                                    @Html.TextBox("Address", null, new { @class = "form-control" })

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Status", htmlAttributes: new { @class = "control-label col-md-2", @required = "required" })
                                <div class="col-md-10">
                                    <select class="form-control" id="Status" name="Status">
                                        <option value="A">Active</option>
                                        <option value="I">Inactive</option>
                                    </select>
                                </div>
                            </div>

                            <div class="modal-footer">
                                <div class="col-md-offset-2 col-md-10">
                                    <button type="submit" class="btn btn-primary" id="ModalSave">Save</button>
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="detailForm" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staffModalTitle">Edit Site</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="panel-body">
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <div class="form-group">
                            <input type="hidden" id="ProjectId" value="" />
                        </div>
                        <div class="form-group">
                            @Html.Label("Site", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="col-md-10">
                                @Html.TextBox("ModalSite", null, new { @class = "form-control", @id = "ModalSite" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Location", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="col-md-10">
                                @Html.TextBox("ModalLocation", null, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Site Engineer", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input type="hidden" id="modalSiteEng" />
                                @Html.DropDownList("RName", null, "--Select--", htmlAttributes: new { @id = "ModalSiteEngineer", @class = "form-control select2", @style = "width: 500px !important" })
                            </div>
                        </div>
                        <div class="modal-footer">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="submit" class="btn btn-primary" id="ModalDetailSave">Save</button>
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@*<style>
        .form-group .select2-container {
            width: 300px !important;
        }
    </style>*@

@*<p><button type="button" class="btn btn-warning btn-sm" onclick="window.location.href='@Url.Action("Index")';"><i class="icon-circle-left2 position-left"></i> Go back</button></p>*@





<script>

    var deleteCounter = 0;
    var deleteList = [];
    var selRow;
    var row;
    var taskCounter =0;

    $(document).ready(function (){
        $('#SiteName_Error').hide();
        $('#SiteLocation_Error').hide();
        $('#SiteEngineer_Error').hide();

        var ProjectUnderSiteId= @ViewBag.PId;
        //var SiteName = document.getElementsByName("SiteName");
        //alert('sname'+SiteName);
        //var SiteLocation = document.getElementsByName("SiteLocation");
        //var SiteEngineerId = document.getElementsByName("SiteEngineerId");


        ResourceDetails = JSON.stringify({
           ProjectId: ProjectUnderSiteId
     });

      //var SiteEngineerId = $('#SiteEngineerId option:selected').text();


        $.ajax({
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            type: 'POST',
            url: '/Projects/getProjectSites/',
            traditional: true,
            data: ResourceDetails,
            success: function (data) {
               // console.log(data);
         for (var i = 0; i < data.length; i++) {

             taskCounter++;
             var newRow = jQuery('<tr>'
                 +'<td><input class="form-control" value="' + data[i].ProjectSiteId + '" type="hidden" name="ProjectSiteId"/><input class="form-control" value="' + data[i].SiteName + '" type="text" name="SiteName"/><input type="hidden" name="TaskId" value="' + taskCounter + '"/></td>'
                + '<td><input class="form-control" value="' + data[i].SiteLocation + '" type="text" name="SiteLocation"/></td>'
                + '<td><input value="' + data[i].SiteEngineerId + '" type="hidden" name="SiteEngineerId"/><input class="form-control" value="' + data[i].SiteEngineer + '"  type="text" name="SiteEngineer" disabled="disabled"/></td>'
                +'<td>'
                //+'<button  onclick="RemoveTask(this)" type="button" class="btn  text-warning-600 btn-flat btn-icon btn-rounded"><i class="icon-cross"></i></button>'
                + '<button type="button" id="editSite" class="btn text-primary-400 btn-flat btn-icon btn-rounded  btn-xs editSite " data-toggle="modal" data-target="#detailForm"><i class="icon-pencil"></i></button>'
                +'<button class="btn text-warning-600 btn-flat btn-icon btn-rounded deleteDetailTask"><i class="icon-cross"></i></button>'+
                +'</td></tr>');

                    jQuery('table.Resource-list tbody').append(newRow);
         }

         $('.editSite').click(function () {

             row = $(this).closest('tr');
             selRow = $(this).closest('tr');
             editModalItem();
         });

         $('.deleteDetailTask').click(function (e) {
             e.preventDefault();
             //var retVal = confirm("Do you want to delete this Item ?");
             //if (retVal == true) {
                 var row = $(this).closest('tr');
                 var itemDetId = $(this).closest('tr').find('td input[name=ProjectSiteId]').val();
                 //alert(itemDetId);

                 SiteDelete = JSON.stringify({
                     ProjectSiteId: itemDetId
                 });

                 $.ajax({
                     contentType: 'application/json; charset=utf-8',
                     dataType: 'json',
                     type: 'POST',
                     url: '/Projects/DeleteProjectSites',
                     data: SiteDelete,
                     success: function (result) {
                         console.log(result);
                         if (result.flag === true) {
                             deleteList[deleteCounter] = itemDetId;
                             deleteCounter++;
                             row.remove();
                         }
                         else {
                             alert(result.message);
                         }


                     },
                     failure: function (response) {
                         alert('error');
                     }
                 });

             //}
             //else {
             //    return false;
             //}
                        
         });

            },
            error: function (data) {
                alert('Error: ');
            }
        });
    });




    function editModalItem(){
        var TaskId = row.find('input[name=TaskId]').val();
        var SiteName = row.find('input[name=SiteName]').val();
        var Location = row.find('input[name=SiteLocation]').val();
        var SiteEngineer = row.find('input[name=SiteEngineer]').val();
        var SiteEngineerId = row.find('input[name=SiteEngineerId]').val();
        //alert(SiteEngineer);

        $('#ModalTaskId').val(TaskId);
        $('#ModalSite').val(SiteName);
        $('#ModalLocation').val(Location);
        $('#modalSiteEng').val(SiteEngineerId);
            
        $('#ModalSiteEngineer').val(SiteEngineerId).change();
    }


    $('#ModalDetailSave').click(function () {

        
        var isValidSite = true;
        var TaskId = $('#ModalTaskId').val();

        var SiteName = $('#ModalSite').val();
        var Location = $('#ModalLocation').val();
        var SiteEngineer = $('#ModalSiteEngineer option:selected').val();
        var SiteEngineerName = $('#ModalSiteEngineer option:selected').text();
        
        $('table.Resource-list tbody tr').each(function () {
            var name = $(this).find("td input[name=SiteName]").val();
            var task = $(this).find("td input[name=TaskId]").val();

            if (task != TaskId.trim()) {
                if (SiteName.toUpperCase() == name.toUpperCase()){
                    alert('This Site already exists!');
                    isValidSite = false;
                }
            }         
        });

        if (isValidSite) {
            selRow.find('input[name=SiteName]').val(SiteName);
            selRow.find('input[name=SiteLocation]').val(Location);
            selRow.find('input[name=SiteEngineer]').val(SiteEngineerName);
            selRow.find('input[name=SiteEngineerId]').val(SiteEngineer);

            $('#detailForm').modal('hide');
        }
    });


    $('#ModalSave').click(function () {
        $('#resourceProjectManagerModal').modal('hide');
    });

    //new on 10 Jan 18
     var counter = 0; //counter for the serial

    //add new row
    $('#addNewRow').click(function (event) {
       // debugger;
        event.preventDefault();
        counter++;

        //var ProjectSiteId = $('#ProjectSiteId').val();
        var ProjectSiteId = 0;

        var SiteName = $('#SiteName').val();
        //alert('SiteName' + SiteName);

        var SiteLocation = $('#SiteLocation').val();
        //alert('SiteLocation' + SiteLocation);

        var SiteEngineer = $('#SiteRName option:selected').text();
       // alert('SiteEngineer' + SiteEngineer);

        var SiteEngineerId = $('#SiteRName option:selected').val();
       // alert('SiteEngineerId' + SiteEngineerId);

        //new
        var isValidSite = true;

        if ($('#SiteName').val().trim() == '') {

            isValidSite = false;
            $('#SiteName_Error').show();
        }
        else {
            $('#SiteName_Error').hide();
        }

        if ($('#SiteLocation').val().trim() == '') {

            isValidSite = false;
            $('#SiteLocation_Error').show();
        }
        else {
            $('#SiteLocation_Error').hide();
        }

        if (SiteEngineer === '' || SiteEngineer==="--Select--") {

            isValidSite = false;
            $('#SiteEngineer_Error').show();
        }
        else {
            $('#SiteEngineer_Error').hide();
        }

        $('table.Resource-list tr').each(function(){
            var name = $(this).find("td input[name=SiteName]").val();
            //alert(name);
            if (SiteName == name) {
                alert('This Site is already exists!');
                isValidSite = false;
            }
 
        });

        //Add site to list if valid
        if (isValidSite)
        {
            taskCounter++;
            var newRow = jQuery('<tr><td><input class="form-control" value="' + ProjectSiteId + '" type="hidden" name="ProjectSiteId"/><input class="form-control" value="' + SiteName + '" type="text" name="SiteName"/><input type="hidden" name="TaskId" value="' + taskCounter + '"/></td>'
                + '<td><input class="form-control" value="' + SiteLocation + '" type="text" name="SiteLocation"/></td>'
                + '<td><input value="' + SiteEngineerId + '" type="hidden" name="SiteEngineerId"/><input class="form-control" value="' + SiteEngineer + '"  type="text" name="SiteEngineer"/></td>'
                +'<td>'
                + '<button type="button" id="editSite" class="btn text-primary-400 btn-flat btn-icon btn-rounded  btn-xs editSite " data-toggle="modal" data-target="#detailForm"><i class="icon-pencil"></i></button>'
                +' <button class="btn  text-warning-600 btn-flat btn-icon btn-rounded"  onclick="$(this).parent().parent().remove();"><i class="icon-cross"></i></button>'
                +'</td></tr>');

            jQuery('table.Resource-list tbody').append(newRow);
            $('#SiteName').val("");
            $('#SiteLocation').val("");
            //$("#SiteRName").attr("selectedIndex", -1);
            //$("#ProjectManager").val("");

        }


        $('.editSite').click(function () {
            row = $(this).closest('tr');
            selRow = $(this).closest('tr');
            editModalItem();
        });

        $('#SiteName').val("");
        $('#SiteLocation').val("");
        //end
    });






      var ProjectId=@ViewBag.Proj;



    function RemoveTask(e)
    {
        debugger;

        var currRowIndex = 0;

        currRowIndex = $(e).closest('tr').index() + 1;

        //  alert('procId '+ProcProjectId);

        if (confirm('Do you really want to delete?')==false)
        {
            return;
        }

        var currRowPlanTaskId = $('#Item-list tr').eq(currRowIndex-1).find("td input[name=ProjectSiteId]").val();
        // alert('ItemId: '+ItemId);
        //  alert($('#Item-list tr').eq(currRowIndex-1).find("td input[name=ItemId]").val());
        // alert('currIndex: '+currRowPlanTaskId);
        if (currRowPlanTaskId >0 )
        {
            $.ajax({
                type: "POST",
                url: "/Projects/DeleteProjectSites",
                data: { id: currRowPlanTaskId, ProjectId: ProjectId },
                success: function (data) {

                    if (data.flag)
                    {
                        alert("Data deleted successfully !");

                        $(e).parent().parent().remove();
                        UpdateTableRowIndex();
                        counter--;
                    }
                    else
                    {
                        alert(data.message);
                    }


                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert('Error: ' + textStatus + ' - ' + errorThrown);
                },
                dataType: "json",
                traditional: true
            });
        }
        else
        {
            $(e).parent().parent().remove();
            UpdateTableRowIndex();
            counter--;
        }


    }



    //end
</script>



<script>

    var counter = 0;
    var cnTaskRow = 0;

    //Adding Company Resources
    function OnBeginStaff() {}
    function OnCompleteStaff() {}
    function OnSuccessStaff() {
        $('#NameStaff').val("");
        $('#Position').val("");
        $('#ToDOJ').val("");
        $('#ToDOB').val("");
        $('#Phone').val("");
        $('#Mobile').val("");
        $('#Email').val("");
        $('#Address').val("");
        //$('#Status').val("");
        $('#resourceStaffModal').modal('hide');
        $.get("@Url.Action("GetStaff", "CompanyResources")", function(resp) {
            if (resp.Flag) {
                //$("#ProjectManager").empty().html("<option value>--Select--</option>");
                $("#SiteRName").empty().html("<option value>--Select--</option>");
                $.each(resp.CompanyResources, function (key, item) {
                    $("<option>").attr("value", item.Value).html(item.Text).appendTo($("#ProjectManager"));
                    $("<option>").attr("value", item.Value).html(item.Text).appendTo($("#SiteRName"));
                });
            }
        });
    }

    function OnFailureStaff() { }



    $('#UpdateProject').click(function () {
            UpdateProject();
    });


    function UpdateProject() {
        var isValid = true;
        var ProjectId=@ViewBag.Proj;
        //alert('ProjectId '+ProjectId);

        var ProjectName = $('#ProjectName').val();
        //alert('ProjectName '+ ProjectName);
        var StartDate = $('#StartDate').val();
       // alert(StartDate);
        var EndDate = $('#EndDate').val();
        //alert(EndDate);
        var Remarks = $('#ProjectRemarks').val();
        //alert('remarks '+Remarks);
        var RName = $('#ProjectManager').val();
        //alert('ProjectManager '+RName);

        //var SiteId = document.getElementsByName("SiteId");
        //for (var i = 0; i < SiteId.length; i++) {
        //    alert('SiteId ' + SiteId[i].value);
        //}


        var ProjectSiteId = document.getElementsByName("ProjectSiteId");
       // alert('siteId '+ProjectSiteId);
        var SiteName = document.getElementsByName("SiteName");
       // alert('sname: '+SiteName);
        var SiteLocation = document.getElementsByName("SiteLocation");
       // alert('SiteLocation: '+SiteLocation);

        var SiteEngineerId = document.getElementsByName("SiteEngineerId");

        var SiteEngineer = document.getElementsByName("SiteEngineer");

       // alert('SiteEngineerId: '+SiteEngineerId);

        var Length = $('.Resource-list tr').length;
        //  alert('L '+Length);

        if ($('.Resource-list tr').length < 2) {
            alert('Please Add Site to this Project');
            isValid = false;
        }


        if (isValid) {
            var SiteDetails = [];

            // alert('test');
            for (var i = 0; i < Length-1; i++) {

                SiteDetails.push({ 
                    ProjectSiteId:ProjectSiteId[i].value, 
                    SiteName: SiteName[i].value, 
                    SiteLocation: SiteLocation[i].value, 
                    SiteEngineerId: SiteEngineerId[i].value, 
                    SiteEngineer:SiteEngineer[i].value
                });
                // alert(SiteEngineer[i].value);
                // alert(ProjectSiteId[i].value);
                // alert('pid '+PId);
                console.log('--------->');
                console.log('ProjectSiteId:'+SiteDetails[i].ProjectSiteId );
                console.log('SiteName:'+SiteDetails[i].SiteName );
                console.log('SiteLocation:'+SiteDetails[i].SiteLocation );
                console.log('SiteEngineerId:'+SiteDetails[i].SiteEngineerId );
                console.log('SiteEngineer:'+SiteDetails[i].SiteEngineer );

            }
            console.log('=====End======');

            console.log('ProjectId:'+ProjectId);       
            console.log('ProjectName:'+ProjectName);
            console.log('StartDate:'+StartDate);
            console.log('EndDate:'+EndDate);
            console.log('Remarks:'+Remarks);
            console.log('RName:'+RName);

            SiteResourceDetails = JSON.stringify({
                SiteResourceDetails: SiteDetails,
                DeleteItems:deleteList,
                ProjectId:ProjectId,
                ProjectName: ProjectName,
                StartDate: StartDate,
                EndDate: EndDate,
                Remarks: Remarks,
                RName: RName
            });


            //   debugger;
            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: '/Projects/ProjectUpdate',
                traditional: true,
                data: SiteResourceDetails,
                success: function (result) {
                    //alert('Successful');
                    if (result.flag) {
                        alert("Record save successfully!");
                        window.location = "/Projects/Index";
                    }
                    else {
                        alert(result.message);
                    }
                },
                failure: function (response) {
                    alert('Error');
                }
            });
        }


   
    };



</script>


@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Plugins/select2/select2.min.js"></script>


    <script>
      $(".select2").select2();
    </script>

}

<style>
    span.error {
        display: block;
        /*visibility: hidden;*/
        color: red;
        font-size: 90%;
    }
</style>